Python 2.3.5 (#2, Aug 30 2005, 15:50:26) 
[GCC 4.0.2 20050821 (prerelease) (Debian 4.0.1-6)] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import sim
>>> dir(sim)
['ConservativeScheduler', 'CpuSnapshot', 'CpuTimeSlice', 'Job',
'__builtins__', '__doc__', '__file__', '__name__']
>>> reload(sim)
<module 'sim' from 'sim.pyc'>
>>> execfile('sim.py')
>>> dir()
['ConservativeScheduler', 'CpuSnapshot', 'CpuTimeSlice', 'Job',
'__builtins__', '__doc__', '__name__', 'sim']
>>> 

----------------------------------------------------------------------

% svn stat
% svn diff
% svn commit
% svn up

% svn revert
% svn add

% svn help <command>
% svn checkout https://pyss.googlecode.com/svn/trunk/ pyss --username <username>
% svn checkout http://pyss.googlecode.com/svn/trunk/ pyss

./tests.py

-----
# Debugging an exception:
% python2.4 -m pdb ./event.py
# then do a 'continue' ('c' + <enter>) to reach the exception

# to debug at a specific line, add this:
import pdb; pdb.set_trace()


code optimization sunday evening 

head -10000 stam2/input > ! input ; time sim4.py > ! output

Cons
104.926u 0.180s 3:14.90 53.9%   0+0k 0+0io 0pf+0w
103.258u 0.380s 2:21.06 73.4%   0+0k 0+0io 0pf+0w
104.122u 0.236s 2:00.55 86.5%   0+0k 0+0io 0pf+0w


_______________________

Code Optimization: 

Sunday morning - evening  
500 input lines  

head -500 stam2/input > ! input ; time sim4.py > ! output

FCFS: 
7.888u 0.120s 0:08.69 92.0%     0+0k 0+0io 4pf+0w
15.808u 0.180s 0:18.18 87.8%    0+0k 0+0io 0pf+0w
13.272u 0.176s 0:15.37 87.4%    0+0k 0+0io 0pf+0w
8.876u 0.100s 0:10.24 87.5%     0+0k 0+0io 0pf+0w
8.700u 0.108s 0:09.92 88.7%     0+0k 0+0io 0pf+0w
6.992u 0.068s 0:07.94 88.7%     0+0k 0+0io 0pf+0w
7.048u 0.068s 0:08.04 88.3%     0+0k 0+0io 0pf+0w
1.100u 0.060s 0:01.53 75.8%     0+0k 0+0io 10pf+0w
0.492u 0.036s 0:00.73 71.2%     0+0k 0+0io 0pf+0w
0.516u 0.036s 0:00.61 88.5%     0+0k 0+0io 0pf+0w
0.504u 0.032s 0:00.63 84.1%     0+0k 0+0io 0pf+0w


Easy:
8.036u 0.140s 0:08.80 92.8%     0+0k 0+0io 0pf+0w
7.920u 0.108s 0:08.47 94.6%     0+0k 0+0io 0pf+0w
7.596u 0.104s 0:08.13 94.5%     0+0k 0+0io 0pf+0w
15.368u 0.176s 0:17.76 87.4%    0+0k 0+0io 0pf+0w
13.324u 0.144s 0:15.86 84.8%    0+0k 0+0io 4pf+0w
8.744u 0.152s 0:09.64 92.2%     0+0k 0+0io 0pf+0w
6.952u 0.096s 0:07.72 91.1%     0+0k 0+0io 0pf+0w
7.104u 0.092s 0:08.28 86.8%     0+0k 0+0io 0pf+0w
7.104u 0.112s 0:08.10 89.0%     0+0k 0+0io 0pf+0w
1.076u 0.048s 0:01.45 76.5%     0+0k 0+0io 0pf+0w
0.484u 0.040s 0:00.60 86.6%     0+0k 0+0io 0pf+0w



Cons: 
7.796u 0.096s 0:09.45 83.3%     0+0k 0+0io 0pf+0w
16.485u 0.184s 0:18.78 88.7%    0+0k 0+0io 0pf+0w
13.460u 0.096s 0:15.23 88.9%    0+0k 0+0io 0pf+0w
8.892u 0.092s 0:10.28 87.3%     0+0k 0+0io 1pf+0w
7.004u 0.076s 0:07.95 88.9%     0+0k 0+0io 0pf+0w
1.068u 0.032s 0:01.36 80.1%     0+0k 0+0io 0pf+0w
0.524u 0.036s 0:00.62 88.7%     0+0k 0+0io 0pf+0w
0.752u 0.056s 0:00.88 90.9%     0+0k 0+0io 0pf+0w
0.536u 0.032s 0:00.67 83.5%     0+0k 0+0io 0pf+0w
0.512u 0.060s 0:00.71 80.2%     0+0k 0+0io 0pf+0w
0.504u 0.044s 0:00.61 88.5%     0+0k 0+0io 0pf+0w
0.576u 0.048s 0:00.64 95.3%     0+0k 0+0io 0pf+0w
0.476u 0.040s 0:00.55 92.7%     0+0k 0+0io 0pf+0w

Tests: 
Ran 12 tests in 3.919s
3.548u 0.144s 0:04.37 84.2%     0+0k 0+0io 1pf+0w

Ran 12 tests in 3.337s
3.340u 0.080s 0:03.65 93.6%     0+0k 0+0io 0pf+0w
Ran 12 tests in 4.584s
4.252u 0.096s 0:04.98 87.1%     0+0k 0+0io 0pf+0w
Ran 12 tests in 2.911s
2.624u 0.116s 0:03.23 84.5%     0+0k 0+0io 0pf+0w
Ran 12 tests in 2.991s
2.672u 0.104s 0:03.31 83.6%     0+0k 0+0io 0pf+0w
Ran 12 tests in 3.170s
2.280u 0.132s 0:03.43 70.2%     0+0k 0+0io 1pf+0w
Ran 12 tests in 1.586s
1.500u 0.108s 0:01.81 88.3%     0+0k 0+0io 0pf+0w
Ran 12 tests in 1.161s
1.184u 0.088s 0:01.51 83.4%     0+0k 0+0io 0pf+0w
Ran 12 tests in 0.824s
0.836u 0.080s 0:01.02 89.2%     0+0k 0+0io 0pf+0w
Ran 12 tests in 0.623s
0.608u 0.088s 0:00.80 85.0%     0+0k 0+0io 0pf+0w
Ran 12 tests in 0.604s
0.624u 0.068s 0:00.79 86.0%     0+0k 0+0io 0pf+0w


-------------------------
-------------------------
-------------------------
Monday

5000 input lines with profiler
head -5000 stam2/input > ! input ; time sim4.py > ! output 

FCFS
20.621u 0.100s 0:21.59 95.9%    0+0k 0+0io 0pf+0w

Easy
20.893u 0.100s 0:22.16 94.7%    0+0k 0+0io 0pf+0w
18.881u 0.068s 0:19.54 96.9%    0+0k 0+0io 0pf+0w 
25.385u 0.432s 0:26.32 98.0%    0+0k 0+0io 5pf+0w
25.453u 0.576s 0:29.35 88.6%    0+0k 0+0io 1pf+0w


Cons 
21.205u 0.108s 0:22.62 94.1%    0+0k 0+0io 2pf+0w
20.321u 0.076s 0:22.67 89.9%    0+0k 0+0io 0pf+0w
20.177u 0.120s 0:20.88 97.1%    0+0k 0+0io 0pf+0w
19.365u 0.128s 0:20.76 93.8%    0+0k 0+0io 8pf+0w
18.881u 0.064s 0:18.97 99.8%    0+0k 0+0io 0pf+0w
18.817u 0.076s 0:19.04 99.1%    0+0k 0+0io 0pf+0w
25.569u 0.464s 0:26.60 97.8%    0+0k 0+0io 2pf+0w


 


